{"version":3,"file":"static/js/450.9bbb4903.chunk.js","mappings":"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","sources":["components/card/ShowPaymentInfo.js","components/nav/UserNav.js","functions/user.js","components/order/Invoice.js","pages/user/History.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst ShowPaymentInfo = ({ order, showStatus = true }) => (\r\n  <div className=\"row offset-md-1 text-left\">\r\n    <div className=\"col-md-6\">\r\n      <p>\r\n        <span>Order Id: {order.paymentIntent?.id}</span>\r\n        <br />\r\n        <span>Amount: {order.paymentIntent.amount}</span>\r\n        <br />\r\n        <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>\r\n        <br />\r\n      </p>\r\n    </div>\r\n\r\n    <div className=\"col-md-6\">\r\n      <p>\r\n        <span>Method: {order.paymentIntent.payment_method_types[0]}</span>\r\n        <br />\r\n        <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>\r\n        <br />\r\n        <span>\r\n          Ordered on:{\" \"}\r\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n        </span>\r\n        <br />\r\n        {showStatus && (\r\n          <span className=\"badge bg-primary text-white\">\r\n            STATUS: {order.orderStatus}\r\n          </span>\r\n        )}\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ShowPaymentInfo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserNav = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav flex-column\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/user/history\" className=\"nav-link\">\r\n            History\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/user/password\" className=\"nav-link\">\r\n            Password\r\n          </Link>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/user/whislist\" className=\"nav-link\">\r\n            Whislist\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default UserNav;\r\n","import axios from \"axios\";\r\n\r\nexport const userCart = (cart, authtoken) =>\r\n  axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart`,\r\n    { cart },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const getUserCart = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const emptyUserCart = async (authtoken) =>\r\n  await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const saveUserAddress = async (authtoken, address) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/address`,\r\n    { address },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const applyCoupon = async (coupon, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\r\n    { coupon },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const createOrder = async (stripeResponse, authtoken) =>\r\n  await axios.post(`${process.env.REACT_APP_API}/user/order`, stripeResponse, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const getUserOrders = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/order`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const getWishlist = async (authtoken) =>\r\n  await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\r\n    headers: {\r\n      authtoken,\r\n    },\r\n  });\r\n\r\nexport const removeWishlist = async (productId, authtoken) =>\r\n  await axios.put(\r\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\r\n    {},\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const addToWishlist = async (productId, authtoken) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/wishlist`,\r\n    { productId },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const createCashOrderForUser = async (authtoken, COD, coupon) =>\r\n  await axios.post(\r\n    `${process.env.REACT_APP_API}/user/cash-order`,\r\n    { couponApplied: coupon, COD },\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n","import React from \"react\";\r\nimport { Document, Page, Text, StyleSheet } from \"@react-pdf/renderer\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableBody,\r\n  DataTableCell,\r\n} from \"@david.kucsai/react-pdf-table\";\r\n\r\nconst Invoice = ({ order }) => (\r\n  <Document>\r\n    <Page style={styles.body}>\r\n      <Text style={styles.header} fixed>\r\n        ~ {new Date().toLocaleString()} ~\r\n      </Text>\r\n      <Text style={styles.title}>Order Invoice</Text>\r\n      <Text style={styles.author}>React Redux Ecommerce</Text>\r\n      <Text style={styles.subtitle}>Order Summary</Text>\r\n\r\n      <Table>\r\n        <TableHeader>\r\n          <TableCell>Title</TableCell>\r\n          <TableCell>Price</TableCell>\r\n          <TableCell>Quantity</TableCell>\r\n          <TableCell>Brand</TableCell>\r\n          <TableCell>Color</TableCell>\r\n        </TableHeader>\r\n      </Table>\r\n\r\n      <Table data={order.products}>\r\n        <TableBody>\r\n          <DataTableCell getContent={(x) => x.product.title} />\r\n          <DataTableCell\r\n            getContent={(x) =>\r\n              x.product.price.toLocaleString(\"in-ID\", {\r\n                style: \"currency\",\r\n                currency: \"IDR\",\r\n              })\r\n            }\r\n          />\r\n          <DataTableCell getContent={(x) => x.count} />\r\n          <DataTableCell getContent={(x) => x.product.brand} />\r\n          <DataTableCell getContent={(x) => x.product.color} />\r\n        </TableBody>\r\n      </Table>\r\n\r\n      <Text style={styles.text}>\r\n        <Text>\r\n          Date: {\"               \"}\r\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Order Id: {\"         \"}\r\n          {order.paymentIntent.id}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Order Status: {\"  \"}\r\n          {order.orderStatus}\r\n        </Text>\r\n        {\"\\n\"}\r\n        <Text>\r\n          Total Paid: {\"       \"}\r\n          {order.paymentIntent.amount}\r\n        </Text>\r\n      </Text>\r\n\r\n      <Text style={styles.footer}> ~ Thank you for shopping with us ~ </Text>\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  body: {\r\n    paddingTop: 35,\r\n    paddingBottom: 65,\r\n    paddingHorizontal: 35,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  author: {\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n  },\r\n  subtitle: {\r\n    fontSize: 18,\r\n    margin: 12,\r\n  },\r\n  text: {\r\n    margin: 12,\r\n    fontSize: 14,\r\n    textAlign: \"justify\",\r\n  },\r\n  image: {\r\n    marginVertical: 15,\r\n    marginHorizontal: 100,\r\n  },\r\n  header: {\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  footer: {\r\n    padding: \"100px\",\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  pageNumber: {\r\n    position: \"absolute\",\r\n    fontSize: 12,\r\n    bottom: 30,\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n  },\r\n});\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UserNav from \"../../components/nav/UserNav\";\r\nimport { getUserOrders } from \"../../functions/user\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport ShowPaymentInfo from \"./../../components/card/ShowPaymentInfo\";\r\nimport Invoice from \"./../../components/order/Invoice\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\n\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = () =>\r\n    getUserOrders(user.token).then((res) => {\r\n      // console.log(JSON.stringify(res.data, null, 4));\r\n      setOrders(res.data);\r\n    });\r\n\r\n  const showOrderInTable = (order) => (\r\n    <table className=\"table table-bordered\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Title</th>\r\n          <th scope=\"col\">Price</th>\r\n          <th scope=\"col\">Brand</th>\r\n          <th scope=\"col\">Color</th>\r\n          <th scope=\"col\">Count</th>\r\n          <th scope=\"col\">Shipping</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {order.products.map((p, i) => (\r\n          <tr key={i}>\r\n            <td>\r\n              <b>{p.product.title}</b>\r\n            </td>\r\n            <td>\r\n              {p.product.price.toLocaleString(\"in-ID\", {\r\n                style: \"currency\",\r\n                currency: \"IDR\",\r\n              })}\r\n            </td>\r\n            <td>{p.product.brand}</td>\r\n            <td>{p.color}</td>\r\n            <td>{p.count}</td>\r\n            <td>\r\n              {p.product.shipping === \"Yes\" ? (\r\n                <CheckCircleOutlined style={{ color: \"green\" }} />\r\n              ) : (\r\n                <CloseCircleOutlined style={{ color: \"red\" }} />\r\n              )}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order} />}\r\n      fileName=\"invoice.pdf\"\r\n      className=\"btn btn-sm btn-block btn-outline-primary\"\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  const showEachOrders = () =>\r\n    orders.reverse().map((order, i) => (\r\n      <div key={i} className=\"m-5 p-3 card\">\r\n        <ShowPaymentInfo order={order} />\r\n        {showOrderInTable(order)}\r\n        <div className=\"row\">\r\n          <div className=\"col\">{showDownloadLink(order)}</div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n        <div className=\"col text-center\">\r\n          <h4 className=\"pb-2 text-center\">\r\n            {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\r\n          </h4>\r\n          {showEachOrders()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n"],"names":["order","showStatus","className","paymentIntent","id","amount","currency","toUpperCase","payment_method_types","status","Date","created","toLocaleString","orderStatus","to","userCart","cart","authtoken","axios","process","headers","getUserCart","emptyUserCart","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","getUserOrders","getWishlist","removeWishlist","productId","addToWishlist","createCashOrderForUser","COD","couponApplied","styles","StyleSheet","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Document","Page","style","Text","fixed","Table","TableHeader","TableCell","data","products","TableBody","DataTableCell","getContent","x","product","price","count","brand","useState","orders","setOrders","user","useSelector","state","useEffect","loadUserOrders","token","then","res","showOrderInTable","scope","map","p","i","shipping","CheckCircleOutlined","CloseCircleOutlined","showDownloadLink","PDFDownloadLink","document","fileName","UserNav","length","reverse","ShowPaymentInfo"],"sourceRoot":""}