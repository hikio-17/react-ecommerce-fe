{"version":3,"file":"static/js/376.ed2bcacf.chunk.js","mappings":"yNAuGA,UAjGyB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAGIC,IADaC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,EAAjB,IAArBC,MACOC,EAAAA,EAAAA,QAEfC,EAAAA,EAAAA,YAAU,WACRR,EAASS,OAAOC,aAAaC,QAAQ,wBAGtC,GAAE,IAEH,IAAMC,EAAY,yCAAG,WAAOC,GAAP,iFACnBA,EAAEC,iBAEGf,GAAUE,EAHI,uBAIjBc,EAAAA,GAAAA,MAAY,kCAJK,+BAQfd,EAASe,OAAS,GARH,uBASjBD,EAAAA,GAAAA,MAAY,+CATK,oDAcIE,EAAAA,EAAAA,oBACnBlB,EACAU,OAAOS,SAASC,MAhBD,mBAmBNb,KAAKc,cAnBC,wBAqBfX,OAAOC,aAAaW,WAAW,wBAE3Bf,EAAOW,EAAAA,EAAAA,YAvBI,UAwBTX,EAAKgB,eAAerB,GAxBX,yBAyBaK,EAAKiB,mBAzBlB,QAyBTC,EAzBS,OA2BfC,QAAQC,IAAI,OAAQpB,EAAM,gBAAiBkB,IAE3CG,EAAAA,EAAAA,IAAmBH,EAAcI,OAC9BC,MAAK,SAACC,GACL3B,EAAS,CACP4B,KAAM,iBACNC,QAAS,CACPC,KAAMH,EAAII,KAAKD,KACflC,MAAO+B,EAAII,KAAKnC,MAChB6B,MAAOJ,EAAcI,MACrBO,KAAML,EAAII,KAAKC,KACfC,IAAKN,EAAII,KAAKE,MAGnB,IACAC,OAAM,SAACC,GAAD,OAASb,QAAQC,IAAIY,EAArB,IAGTzC,EAAQ0C,KAAK,KA7CE,0DAgDjBd,QAAQC,IAAR,MACAX,EAAAA,GAAAA,MAAY,KAAMyB,SAjDD,0DAAH,sDAwElB,OACE,gBAAKC,UAAU,gBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,iBAAKA,UAAU,uBAAf,WACE,+CAtBN,kBAAMC,SAAU9B,EAAhB,WACE,kBAAOmB,KAAK,QAAQU,UAAU,eAAeE,MAAO5C,EAAO6C,UAAQ,KAEnE,kBACEb,KAAK,WACLU,UAAU,eACVE,MAAO1C,EACP4C,SAAU,SAAChC,GAAD,OAAOX,EAAYW,EAAEiC,OAAOH,MAA5B,EACVI,YAAY,WACZC,WAAS,KAEX,mBACA,mBAAQjB,KAAK,SAASU,UAAU,iBAAhC,4CAgBL,C","sources":["pages/auth/RegisterComplete.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../firebase\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrUpdateUser } from \"../../functions/auth\";\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\r\n    // console.log(window.location.href);\r\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // validation\r\n    if (!email || !password) {\r\n      toast.error(\"Email and password is required\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error(\"Password must be at least 6 characters long\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(\r\n        email,\r\n        window.location.href\r\n      );\r\n      //   console.log(\"RESULT\", result);\r\n      if (result.user.emailVerified) {\r\n        // remove user email fom local storage\r\n        window.localStorage.removeItem(\"emailForRegistration\");\r\n        // get user id token\r\n        let user = auth.currentUser;\r\n        await user.updatePassword(password);\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        // redux store\r\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\r\n\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: \"LOGGED_IN_USER\",\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n\r\n        // redirect\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const completeRegistrationForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"email\" className=\"form-control\" value={email} disabled />\r\n\r\n      <input\r\n        type=\"password\"\r\n        className=\"form-control\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className=\"btn btn-raised\">\r\n        Complete Registration\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-md-3\">\r\n          <h4>Register Complete</h4>\r\n          {completeRegistrationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComplete;\r\n"],"names":["history","useState","email","setEmail","password","setPassword","dispatch","useSelector","state","user","useDispatch","useEffect","window","localStorage","getItem","handleSubmit","e","preventDefault","toast","length","auth","location","href","emailVerified","removeItem","updatePassword","getIdTokenResult","idTokenResult","console","log","createOrUpdateUser","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","className","onSubmit","value","disabled","onChange","target","placeholder","autoFocus"],"sourceRoot":""}