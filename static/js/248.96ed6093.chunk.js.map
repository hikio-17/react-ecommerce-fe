{"version":3,"file":"static/js/248.96ed6093.chunk.js","mappings":"8NA+BA,UAzBmB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,SAAaC,GAAW,YACpCC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,iBAAiBA,EAAjB,IAArBF,KACR,GAAoBG,EAAAA,EAAAA,WAAS,GAA7B,eAAOC,EAAP,KAAWC,EAAX,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACJN,GAAQA,EAAKO,QACfC,EAAAA,EAAAA,IAAaR,EAAKO,OACfE,MAAK,SAACC,GAELL,GAAM,EACP,IACAM,OAAM,SAACC,GACNC,QAAQC,IAAI,oBAAqBF,GACjCP,GAAM,EACP,GAEN,GAAE,CAACL,IAEGI,GACL,SAAC,MAAD,kBAAWL,GAAX,IAAiBgB,OAAQ,kBAAMjB,CAAN,MAEzB,SAAC,IAAD,GAEH,C,wECLD,IArB0B,WACxB,OAA0BK,EAAAA,EAAAA,UAAS,GAAnC,eAAOa,EAAP,KAAcC,EAAd,KACIC,GAAUC,EAAAA,EAAAA,MAYd,OAVAb,EAAAA,EAAAA,YAAU,WACR,IAAMc,EAAWC,aAAY,WAC3BJ,GAAS,SAACK,GAAD,QAAoBA,CAApB,GACV,GAAE,KAIH,OAFU,IAAVN,GAAeE,EAAQK,KAAK,KAErB,kBAAMC,cAAcJ,EAApB,CACR,GAAE,CAACJ,EAAOE,KAGT,gBAAKO,UAAU,4BAAf,UACE,+CAAuBT,EAAvB,cAGL,C","sources":["components/routes/AdminRoute.js","components/routes/LoadingToRedirect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingToRedirect from \"./LoadingToRedirect\";\r\nimport { currentAdmin } from \"../../functions/auth\";\r\n\r\nconst AdminRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [ok, setOk] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      currentAdmin(user.token)\r\n        .then((res) => {\r\n          // console.log(\"CURRENT ADMIN RES\", res);\r\n          setOk(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"ADMIN ROUTE ERROR\", err);\r\n          setOk(false);\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  return ok ? (\r\n    <Route {...rest} render={() => children} />\r\n  ) : (\r\n    <LoadingToRedirect />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoadingToRedirect = () => {\r\n  const [count, setCount] = useState(5);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount);\r\n    }, 1000);\r\n    // redirect once count is equal to 0\r\n    count === 0 && history.push(\"/\");\r\n    // cleanup\r\n    return () => clearInterval(interval);\r\n  }, [count, history]);\r\n\r\n  return (\r\n    <div className=\"container p-5 text-center\">\r\n      <p>Redirecting you in {count} second</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingToRedirect;\r\n"],"names":["children","rest","user","useSelector","state","useState","ok","setOk","useEffect","token","currentAdmin","then","res","catch","err","console","log","render","count","setCount","history","useHistory","interval","setInterval","currentCount","push","clearInterval","className"],"sourceRoot":""}